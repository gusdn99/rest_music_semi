<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
    xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
        http://mybatis.org/schema/mybatis-spring https://mybatis.org/schema/mybatis-spring.xsd">

    <!-- bean definitions here -->
    <!-- HikariConfig 빈(bean) 생성을 위한 설정 lab05_jsp에서 datasource/DataSourceUtil.java파일에서 
        Hikari 커넥션 풀 등록을 빈으로 등록하는거임. -->
    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <!-- ==> hikariConfig = new HikariConfig(); -->
        <property name="driverClassName" value="oracle.jdbc.OracleDriver" />
        <!-- ==> hikariConfig.setDriverClassName("oracle.jdbc.OracleDriver"); -->
        <property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:xe" />
        <!-- ==> hikariConfig.setJdbcUrl("jdbc:oracle:thin:@localhost:1521:xe"); -->
        <!-- 아래 username과 password는 본인의 DB 계정 정보로 변경하세요 -->
        <property name="username" value="YOUR_USERNAME" />
        <!-- ==> hikariConfig.setUsername("YOUR_USERNAME"); -->
        <property name="password" value="YOUR_PASSWORD" />
        <!-- ==> hikariConfig.setPassword("YOUR_PASSWORD"); -->
    </bean>

    <!-- HikariDataSource 빈 생성을 위한 설정 -->
    <!-- ds = new HikariDataSource(hikariConfig); -->
    <bean id="ds" class="com.zaxxer.hikari.HikariDataSource">
        <constructor-arg ref="hikariConfig" />
    </bean>

    <!-- SqlSessionFactoryBean 생성을 위한 설정: 데이터 소스를 이용해서 SQL 문장을 실행, 결과 처리해서 
        리턴할 수 있는 객체. -->
    <bean id="session" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="ds" />
        <property name="mapperLocations" value="classpath:/mappers/**/*.xml" />
        <property name="configLocation" value="classpath:/mybatis-config.xml" />
    </bean>

    <!-- MyBatis-Spring 프레임워크에서 생성하고 관리하는 bean을 설정: base-package와 그 하위 패키지에 
        있는 인터페이스들을 구현한 객체를 생성해 줌. -->
    <mybatis:scan base-package="com.itwill.rest.repository" />

    <!-- 스프링 컨테이너에서 컴포넌트 빈 들을 검색할 기본 패키지를 설정. 스프링 컨테이너가 설정된 패키지와 그 하위 패키지를 
        검색해서 컴포넌트 애너테이션(예: @Service, @Component, ...)이 선언된 클래스의 객체를 생성/관리. 필요한 곳에 
        의존성을 주입해 줌. -->
    <context:component-scan
        base-package="com.itwill.rest.service" />
    <!-- <context:component-scan base-package="com.itwill.rest.web" /> -->

    <!-- JavaMailSender 빈 정의 -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com" />
        <property name="port" value="587" />
        <!-- 아래 username과 password는 본인의 Gmail 계정 정보로 변경하세요 -->
        <property name="username" value="YOUR_EMAIL@gmail.com" />
        <property name="password" value="YOUR_EMAIL_PASSWORD" />
        <property name="defaultEncoding" value="utf-8" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
            </props>
        </property>
    </bean>

</beans>
