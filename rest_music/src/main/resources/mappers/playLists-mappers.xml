<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.itwill.rest.repository.PlayListDao">
  
    <select id="allPlayListsByUserId" resultType="PlaylistFirstAlbumImgDto">
    SELECT
        playlists.p_list_id,
        playlists.p_list_name,
        albums.album_image
    FROM
        users
        JOIN playlists ON users.id = playlists.id
        LEFT JOIN (
            SELECT
                playlist_songs.p_list_id,
                playlist_songs.song_id,
                playlist_songs.created_time,
                ROW_NUMBER() OVER (PARTITION BY playlist_songs.p_list_id ORDER BY playlist_songs.created_time DESC) as rn
            FROM
                playlist_songs
        ) playlist_songs ON playlists.p_list_id = playlist_songs.p_list_id AND playlist_songs.rn = 1
        LEFT JOIN songs ON playlist_songs.song_id = songs.song_id
        LEFT JOIN albums ON songs.album_id = albums.album_id
    WHERE
        users.id = #{id}
    ORDER BY
        playlists.p_list_id
    </select>
    
    <insert id="addSongToPlayList">
        insert into playlist_songs (p_list_id, song_id) values ( #{pListId}, #{songId} ) 
    </insert>
    
    <insert id="addPlayList">
        insert into playlists (id, p_list_name) values (#{id}, #{pListName})
    </insert>
    
    <delete id="deleteByListId">
        delete from playlists where p_list_id = #{pListId}
    </delete>
    
    <delete id="deleteListSongsByListId">
        delete from playlist_songs where p_list_id = #{pListId}
    </delete>
    
    <select id="getSongsByPlistId"  resultType="PlayListSongInfoDto">
    SELECT
    pl.p_list_id,
    pl.p_list_name,
    ps.song_id,
    ps.created_time,
    s.title,
    s.album_id,
    al.album_image,
    al.album_name,
    LISTAGG(DISTINCT ar.artist_id, ', ') WITHIN GROUP (ORDER BY ar.artist_name) AS artist_id,
    LISTAGG(DISTINCT ar.artist_name, ', ') WITHIN GROUP (ORDER BY ar.artist_name) AS artist_name
    FROM
    playlists pl
    JOIN playlist_songs ps ON pl.p_list_id = ps.p_list_id
    JOIN songs s ON ps.song_id = s.song_id
    JOIN albums al ON s.album_id = al.album_id
    JOIN artist_roles arr ON s.song_id = arr.song_id
    JOIN artists ar ON arr.artist_id = ar.artist_id
    WHERE
    pl.p_list_id = #{pListId}
    AND arr.role_id = 10
    GROUP BY
    pl.p_list_id, pl.p_list_name, ps.song_id, ps.created_time, s.title, s.album_id, al.album_image, al.album_name
    ORDER BY
    ps.created_time DESC
    </select>
    
    <select id="getPlayListInfoByListId" resultType="PlayList">
    SELECT
    p_list_id,
    p_list_name
    FROM
    playlists
    WHERE
    p_list_id = #{pListId}
    </select>
    
    <delete id="deleteListSongBySongId">
    DELETE FROM playlist_songs
    WHERE p_list_id = #{pListId}
    AND song_id = #{songId}
    AND created_time = #{createdTime}
    </delete>
    
    <update id="updatePlayListNameByListId">
        update playlists set p_list_name = #{pListName} where p_list_id = #{pListId}
    </update>
    
    <select id="checkSongInPlayList" resultType="Integer">
        select count(*) from playlist_songs where p_list_id = #{pListId} and song_id = #{songId}
    </select>
  
  </mapper>
