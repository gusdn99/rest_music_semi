<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.itwill.rest.repository.AlbumSongsDao">
    <!-- 앨범 번호로 모든 컬럼을 가져오는 셀렉문
          아직 모든 컬럼은 아님. -->
    <select id="selectByAlbumId" resultType="AlbumSongs">
            <!-- 
            genre => genre_name
            singer_name => artist_name
            -->
            SELECT 
                  a.album_id, 
                  a.album_name, 
                  s.song_id, 
                  ts.song_id AS song_id, 
                  s.title, 
                  s.song_path, 
                  LISTAGG(DISTINCT gc.genre_name, ', ') WITHIN GROUP (ORDER BY gc.genre_name) AS genre_name,
                  LISTAGG(DISTINCT art.artist_id, ', ') WITHIN GROUP (ORDER BY art.artist_name) AS artist_id,
                  LISTAGG(DISTINCT art.artist_name, ', ') WITHIN GROUP (ORDER BY art.artist_name) AS artist_name,
                  LISTAGG(DISTINCT art.artist_image, ', ') WITHIN GROUP (ORDER BY art.artist_image) AS artist_image,
                  LISTAGG(DISTINCT art.artist_description, ', ') WITHIN GROUP (ORDER BY art.artist_description) AS artist_description,
                  COUNT(DISTINCT l.id) AS likes_count
              FROM 
                  albums a
                  JOIN songs s ON a.album_id = s.album_id
                  LEFT JOIN song_genre sg ON s.song_id = sg.song_id
                  LEFT JOIN genre_code gc ON sg.genre_id = gc.genre_id
                  JOIN artist_roles artr ON s.song_id = artr.song_id
                  JOIN artists art ON artr.artist_id = art.artist_id
                  JOIN role_code rc ON artr.role_id = rc.role_id
                  LEFT JOIN title_songs ts ON ts.song_id = s.song_id
                  LEFT JOIN likes l ON l.song_id = s.song_id
                  LEFT JOIN album_likes al ON al.album_id = a.album_id
              WHERE 
                  a.album_id = #{albumId} AND rc.role_id = 10
              GROUP BY 
                  a.album_id, a.album_name, s.song_id, ts.song_id, s.title, s.song_path
              ORDER BY 
                  ts.song_id, s.song_id

    </select>

    <select id="selectAlbumByAlbumId" resultType="AlbumSongs">
      <!-- 앨범 상세보기에서 사용하는 데이터를 가져오는 셀렉문 -->
      SELECT 
            a.album_id, 
            a.album_type, 
            a.album_name, 
            a.album_release_date, 
            a.album_image, 
            LISTAGG(DISTINCT s.song_id, ', ') WITHIN GROUP (ORDER BY s.song_id) AS song_id,
            LISTAGG(DISTINCT s.title, ', ') WITHIN GROUP (ORDER BY s.title) AS title,
            LISTAGG(DISTINCT gc.genre_name, ', ') WITHIN GROUP (ORDER BY gc.genre_name) AS genre_name,
            LISTAGG(DISTINCT art.artist_name, ', ') WITHIN GROUP (ORDER BY art.artist_name) AS artist_name,
            LISTAGG(DISTINCT art.artist_id, ', ') WITHIN GROUP (ORDER BY art.artist_name) AS artist_id
        FROM 
            albums a
            JOIN songs s ON a.album_id = s.album_id
            JOIN title_songs ts ON ts.song_id = s.song_id
            LEFT JOIN song_genre sg ON s.song_id = sg.song_id
            LEFT JOIN genre_code gc ON sg.genre_id = gc.genre_id
            JOIN artist_roles artr ON s.song_id = artr.song_id
            JOIN artists art ON artr.artist_id = art.artist_id
            JOIN role_code rc ON artr.role_id = rc.role_id
        WHERE 
            a.album_id = #{albumId} AND rc.role_id = 10
        GROUP BY 
            a.album_id, 
            a.album_type, 
            a.album_name, 
            a.album_release_date, 
            a.album_image
      <!-- select a.album_id, a.album_type, a.album_name, a.album_release_date, a.album_image, 
        singers.singer_name,
        s.song_id, s.title, s.genre,
        title_songs.song_id
      from albums a
          join songs s on a.album_id = s.album_id
          join singers on singers.song_id = s.song_id
          join title_songs on title_songs.song_id= s.song_id
          where a.album_id = #{albumId}
          order by s.title -->
          <!-- 
            genre => genre_name
            singer_name => artist_name
            -->
          
    </select>

    <select id="selectAlbumSongsCount" resultType="Integer">
      <!-- 앨범의 수록곡 개수를 가져오는 셀렉문 -->
      select count(*)
      from albums a
      left join songs s on a.album_id = s.album_id
      where a.album_id=#{albumId}
    </select>

    <select id="selectSongBySongId" resultType="AlbumSongs">
      <!-- 재생하기위한 음원 정보를 가져오는 쿼리 -->
      SELECT 
            a.album_id, 
            a.album_type, 
            a.album_name, 
            a.album_release_date, 
            a.album_image, 
            s.song_id, 
            s.title, 
            s.song_path,
            LISTAGG(DISTINCT gc.genre_name, ', ') WITHIN GROUP (ORDER BY gc.genre_name) AS genre,
            LISTAGG(DISTINCT art.artist_id, ', ') WITHIN GROUP (ORDER BY art.artist_name) AS artist_id,
            LISTAGG(DISTINCT art.artist_name, ', ') WITHIN GROUP (ORDER BY art.artist_name) AS artist_name
        FROM 
            albums a
            JOIN songs s ON a.album_id = s.album_id
            LEFT JOIN song_genre sg ON s.song_id = sg.song_id
            LEFT JOIN genre_code gc ON sg.genre_id = gc.genre_id
            JOIN artist_roles artr ON s.song_id = artr.song_id
            JOIN artists art ON artr.artist_id = art.artist_id
            JOIN role_code rc ON artr.role_id = rc.role_id
        WHERE 
            s.song_id = #{songId} AND rc.role_id = 10
        GROUP BY 
            a.album_id, 
            a.album_type, 
            a.album_name, 
            a.album_release_date, 
            a.album_image,
            s.song_id, 
            s.title, 
            s.song_path
    </select>

    <select id="songLikesCount" resultType="Integer">
      <!-- 음원의 좋아요 개수 가져오는 쿼리 -->
      select count(song_id)
      from likes where song_id=#{songId}
    </select>
    
    <select id="albumLikesCount" resultType="Integer">
      <!-- 앨범의 좋아요 개수 가져오는 쿼리 -->
      select count(album_id)
      from album_likes where album_id = #{albumId}
    </select>
    
    <!-- 좋아요를 눌렀는 지 검사하는 쿼리문 -->
    <select id="isAlbumLikes" resultType="Integer">
      select count(*) from album_likes where album_id = #{albumId} and id = #{id}
    </select>
  
    <!-- 좋아요를 등록하는 쿼리문 -->
    <insert id="addAlbumLike">
        insert into album_likes (album_id, id) values (#{albumId}, #{id})
    </insert>
    
    <!-- 좋아요를 제거하는 쿼리문 -->
    <delete id="removeAlbumLike">
        delete from album_likes where album_id = #{albumId} and id = #{id}
    </delete>

  </mapper>